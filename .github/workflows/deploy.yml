# yaml-language-server: $schema='none'

name: Deploy
on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm ci
          npm run install:ev-enclave
      - name: Run tests
        run: npm test
      - name: Run Lint
        run: npm run lint
      - name: Check Types
        run: npm run build
      - name: Check commit
        run: npx commitlint --last
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v3.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
  deploy-preprod:
    runs-on: ubuntu-latest
    needs: test
    concurrency:
      group: preprod-deploy
      cancel-in-progress: false
    environment:
      name: preproduction
      url: https://wallet-service-preprod.app-32d15525a875.enclave.evervault.com
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      SIGNING_CERT: ${{ secrets.SIGNING_CERT }}
      SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
      EV_API_KEY: ${{ secrets.EV_API_KEY }}
      EV_APP_UUID: ${{ secrets.EV_APP_UUID }}
    steps:
      - uses: actions/checkout@v4
      - name: Install ev
        run: npm run install:ev-enclave
      - name: Add signing cert and key
        run: |
          echo "${{ secrets.SIGNING_CERT }}" > /dev/shm/cert.pem
          echo "${{ secrets.SIGNING_KEY }}" > /dev/shm/key.pem
      - name: Build & Deploy
        run: |
          ev enclave \
            deploy \
            --verbose \
            --no-cache \
            --build-arg ENVIRONMENT=preproduction \
            --build-secret id=NPM_TOKEN \
            --signing-cert /dev/shm/cert.pem \
            --private-key /dev/shm/key.pem \
            --config enclave.preprod.toml \
            --reproducible
      - name: Remove signing cert
        if: always()
        run: rm -f /dev/shm/cert.pem /dev/shm/key.pem
  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-preprod
    concurrency:
      group: production-deploy
      cancel-in-progress: false
    environment:
      name: production
      url: https://wallet-service-production.app-6e12fc400995.enclave.evervault.com
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      SIGNING_CERT: ${{ secrets.SIGNING_CERT }}
      SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
      EV_API_KEY: ${{ secrets.EV_API_KEY }}
      EV_APP_UUID: ${{ secrets.EV_APP_UUID }}
    steps:
      - uses: actions/checkout@v4
      - name: Install ev
        run: npm run install:ev-enclave
      - name: Add signing cert and key
        run: |
          echo "${{ secrets.SIGNING_CERT }}" > /dev/shm/cert.pem
          echo "${{ secrets.SIGNING_KEY }}" > /dev/shm/key.pem
      - name: Build & Deploy
        run: |
          ev enclave \
            deploy \
            --verbose \
            --no-cache \
            --build-arg ENVIRONMENT=production \
            --build-secret id=NPM_TOKEN \
            --signing-cert /dev/shm/cert.pem \
            --private-key /dev/shm/key.pem \
            --config enclave.production.toml \
            --reproducible
      - name: Remove signing cert
        if: always()
        run: rm -f /dev/shm/cert.pem /dev/shm/key.pem
